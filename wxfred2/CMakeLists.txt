
include(source_groups.cmake)

SET(PNG_OUT_FILES)
FOREACH(file ${file_root_res_pngs})
	FILE(RELATIVE_PATH FILE_NAME ${CMAKE_CURRENT_SOURCE_DIR} ${file})
	
	SET(OUTPUT "${GENERATED_SOURCE_DIR}/wxfred2/${FILE_NAME}.h")

	# For some reason this is needed...
	GET_FILENAME_COMPONENT(DIRECTORY_PATH ${OUTPUT} PATH)
	FILE(MAKE_DIRECTORY ${DIRECTORY_PATH})

	get_filename_component(FILENAME ${file} NAME)

	STRING(REPLACE "-" "_" FILENAME ${FILENAME})
	STRING(REPLACE "." "_" FILENAME ${FILENAME})
	STRING(REPLACE "#" "_" FILENAME ${FILENAME})
	
	ADD_CUSTOM_COMMAND(
		OUTPUT ${OUTPUT}
		COMMAND embedpng "${file}" "${OUTPUT}" "${FILENAME}"
		DEPENDS ${file}
		COMMENT "Generating png header for ${file}"
		)
	
	LIST(APPEND PNG_OUT_FILES ${OUTPUT})
ENDFOREACH(file ${file_root_res_pngs})

SOURCE_GROUP("Generated Files\\PNG Files" FILES ${PNG_OUT_FILES})

IF(UNIX)
	SET(wxWidgets_USE_DEBUG OFF)
	SET(wxWidgets_USE_UNICODE ON)
	SET(wxWidgets_USE_UNIVERSAL OFF)
	SET(wxWidgets_USE_STATIC OFF)
ELSEIF(WIN32)
	set(wxWidgets_CONFIGURATION "mswu" CACHE STRING "Release WxWidgets configuration" FORCE)
ENDIF(UNIX)

find_package(wxWidgets COMPONENTS gl core base REQUIRED)

include(${wxWidgets_USE_FILE})

add_executable(wxfred2 WIN32 ${file_root} ${PNG_OUT_FILES})

set_target_properties(wxfred2
	PROPERTIES
	COMPILE_DEFINITIONS_RELEASE "NDEBUG"
	COMPILE_DEFINITIONS_DEBUG "_DEBUG"
	DEBUG_POSTFIX "-DEBUG"
)

IF (FSO_INSTRUCTION_SET STREQUAL "")
	SET_TARGET_PROPERTIES(wxfred2 PROPERTIES OUTPUT_NAME "wxfred2_${FSO_VERSION_MAJOR}_${FSO_VERSION_MINOR}_${FSO_VERSION_BUILD}")
ELSE(FSO_INSTRUCTION_SET STREQUAL "")
	SET_TARGET_PROPERTIES(wxfred2 PROPERTIES OUTPUT_NAME "wxfred2_${FSO_VERSION_MAJOR}_${FSO_VERSION_MINOR}_${FSO_VERSION_BUILD}_${FSO_INSTRUCTION_SET}")
ENDIF(FSO_INSTRUCTION_SET STREQUAL "")

add_definitions(
	-DFRED
)

INCLUDE_DIRECTORIES(${CODE_HEADERS})
INCLUDE_DIRECTORIES(${WXFRED_HEADERS})
INCLUDE_DIRECTORIES(${wxWidgets_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${GENERATED_SOURCE_DIR})
INCLUDE_DIRECTORIES(${GENERATED_SOURCE_DIR}/wxfred2)

TARGET_LINK_LIBRARIES(wxfred2 ${wxWidgets_LIBRARIES})

if(UNIX)
	add_definitions(
		-DSCP_UNIX
		-DLUA_USE_LINUX
	)
	
	set_target_properties(wxfred2
		PROPERTIES
			EXCLUDE_FROM_ALL TRUE
	)
elseif(MSVC)	
	STRING(REGEX REPLACE "/MT" "/MD" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})
	STRING(REGEX REPLACE "/MT" "/MD" CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})
	
	STRING(REGEX REPLACE "/MT" "/MD" CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})
	STRING(REGEX REPLACE "/MT" "/MD" CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})

	add_definitions(
		/DWINVER=0x0501
		/D_WIN32_WINNT=0x0501
		/D_WINDOWS
		/DWIN32
	)
	
	TARGET_LINK_LIBRARIES(wxfred2
		odbc32.lib
		odbccp32.lib
		comctl32.lib
		rpcrt4.lib
		wsock32.lib
		winmm.lib
	)
	
	set_target_properties(wxfred2 PROPERTIES
		COMPILE_DEFINITIONS_DEBUG "PDB_DEBUGGING=1;_HAS_ITERATOR_DEBUGGING=1"
	)
endif(UNIX)


SET(FREESPACE_SRC freespace.cpp
				levelpaging.cpp
				freespace.h
				levelpaging.h
				freespace.rc)
				
IF(FSO_BUILD_PACKAGE)
	IF(FSO_INSTRUCTION_SET STREQUAL "SSE2" OR FSO_INSTRUCTION_SET STREQUAL "AVX")
		SET(FSO_INSTALLER_ICON "${CMAKE_CURRENT_SOURCE_DIR}/V_sse.ico" CACHE FILEPATH "The path of the installer icon")
	ELSE()
		SET(FSO_INSTALLER_ICON "${CMAKE_CURRENT_SOURCE_DIR}/V_app.ico" CACHE FILEPATH "The path of the installer icon")
	ENDIF()
ENDIF(FSO_BUILD_PACKAGE)

ADD_EXECUTABLE(Freespace2 WIN32 MACOSX_BUNDLE ${FREESPACE_SRC})

SET_TARGET_PROPERTIES(Freespace2 PROPERTIES DEBUG_POSTFIX "-DEBUG")

set_target_properties(Freespace2 PROPERTIES
	COMPILE_DEFINITIONS_RELEASE "NDEBUG"
	COMPILE_DEFINITIONS_DEBUG "_DEBUG"
)

IF(MSVC)
	set_target_properties(Freespace2 PROPERTIES
		COMPILE_DEFINITIONS_DEBUG "_DEBUG;PDB_DEBUGGING=1;_HAS_ITERATOR_DEBUGGING=0"
	)
ENDIF(MSVC)

SET_TARGET_PROPERTIES(Freespace2 PROPERTIES OUTPUT_NAME "fs2_open_${FSO_BINARY_SUFFIX}")

set_source_files_properties(fred.rc PROPERTIES LANGUAGE RC)
SET_SOURCE_FILES_PROPERTIES(freespace.rc PROPERTIES COMPILE_DEFINITIONS "_VC08")

IF(FSO_INSTRUCTION_SET STREQUAL "SSE2" OR FSO_INSTRUCTION_SET STREQUAL "AVX")
	SET_SOURCE_FILES_PROPERTIES(freespace.rc PROPERTIES COMPILE_DEFINITIONS "_VC08;_SSE2")
ENDIF()

TARGET_LINK_LIBRARIES(Freespace2 code)
TARGET_LINK_LIBRARIES(Freespace2 ${JPEG_LIBRARIES})
TARGET_LINK_LIBRARIES(Freespace2 ${PNG_LIBRARIES})
TARGET_LINK_LIBRARIES(Freespace2 ${LUA_LIBRARIES})
TARGET_LINK_LIBRARIES(Freespace2 ${OGG_LIBS})
TARGET_LINK_LIBRARIES(Freespace2 ${VORBIS_LIBS})
TARGET_LINK_LIBRARIES(Freespace2 ${VORBISFILE_LIBS})
TARGET_LINK_LIBRARIES(Freespace2 ${THEORA_LIBS})
TARGET_LINK_LIBRARIES(Freespace2 ${OPENAL_LIBRARY})
TARGET_LINK_LIBRARIES(Freespace2 ${PLATFORM_LBRARIES})
TARGET_LINK_LIBRARIES(Freespace2 ${COMPILER_LBRARIES})

IF(UNIX)
	TARGET_LINK_LIBRARIES(Freespace2 ${JANSSON_LIBS})
	TARGET_LINK_LIBRARIES(Freespace2 ${MONGOOSE_LIBRARIES})
ENDIF(UNIX)

IF (FSO_USE_SPEECH)
	TARGET_LINK_LIBRARIES(Freespace2 ${SPEECH_LIBRARIES})
	INCLUDE_DIRECTORIES(${SPEECH_INCLUDE_DIRS})
	ADD_DEFINITIONS(-DFS2_SPEECH)
ENDIF(FSO_USE_SPEECH)

IF(FSO_USE_VOICEREC)
	ADD_DEFINITIONS(-DFS2_VOICER)
ENDIF(FSO_USE_VOICEREC)

TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${COMPILER_INCLUDES})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${PLATFORM_INCLUDES})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${OPENAL_INCLUDE_DIR})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${LUA_INCLUDE_DIR})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${PNG_INCLUDE_DIR})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${JPEG_INCLUDE_DIR})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${CODE_HEADERS})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${FREESPACE_HEADERS})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${OGG_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${VORBIS_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${VORBISFILE_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${THEORA_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(Freespace2 PUBLIC ${GENERATED_SOURCE_DIR})

IF(UNIX)
	TARGET_INCLUDE_DIRECTORIES(Freespace2 ${JANSSON_INCLUDE_DIR})
	TARGET_INCLUDE_DIRECTORIES(Freespace2 ${MONGOOSE_INCLUDE_DIR})
ENDIF(UNIX)

# Add install script to copy the executable to the FreeSpace path if possible and wanted
INSTALL(
	TARGETS Freespace2
	RUNTIME DESTINATION ${BINARY_DESTINATION}
	CONFIGURATIONS Debug Release
)


SET(FREESPACE_SRC freespace.cpp
				levelpaging.cpp
				freespace.h
				levelpaging.h
				freespace.rc)

ADD_EXECUTABLE(Freespace2 ${FREESPACE_SRC})

SET_TARGET_PROPERTIES(Freespace2 PROPERTIES DEBUG_POSTFIX "-DEBUG")

IF (FSO_INSTRUCTION_SET STREQUAL "")
	SET_TARGET_PROPERTIES(Freespace2 PROPERTIES OUTPUT_NAME "fs2_open_${FSO_VERSION_MAJOR}_${FSO_VERSION_MINOR}_${FSO_VERSION_RELEASE}")
ELSE(FSO_INSTRUCTION_SET STREQUAL "")
	SET_TARGET_PROPERTIES(Freespace2 PROPERTIES OUTPUT_NAME "fs2_open_${FSO_VERSION_MAJOR}_${FSO_VERSION_MINOR}_${FSO_VERSION_RELEASE}_${FSO_INSTRUCTION_SET}")
ENDIF(FSO_INSTRUCTION_SET STREQUAL "")

TARGET_LINK_LIBRARIES(Freespace2 code)
TARGET_LINK_LIBRARIES(Freespace2 ${JPEG_LIBRARIES})
TARGET_LINK_LIBRARIES(Freespace2 ${PNG_LIBRARIES})
TARGET_LINK_LIBRARIES(Freespace2 ${LUA_LIBRARIES})
TARGET_LINK_LIBRARIES(Freespace2 ${OGGVORBIS_LIBRARIES})
TARGET_LINK_LIBRARIES(Freespace2 ${OPENAL_LIBRARY})

IF (WIN32)
	# Add windows specific libs here
	TARGET_LINK_LIBRARIES(Freespace2 winmm.lib)
	TARGET_LINK_LIBRARIES(Freespace2 wsock32.lib)
	TARGET_LINK_LIBRARIES(Freespace2 comctl32.lib)
	
	# DirectX libraries are still used on windows
	SET(DIRECTX_DIRECTORY ${CMAKE_SOURCE_DIR}/code/directx)
	TARGET_LINK_LIBRARIES(Freespace2 ${DIRECTX_DIRECTORY}/dxguid.lib)
	TARGET_LINK_LIBRARIES(Freespace2 ${DIRECTX_DIRECTORY}/strmiids.lib)
	TARGET_LINK_LIBRARIES(Freespace2 ${DIRECTX_DIRECTORY}/vdinput.lib)
ENDIF(WIN32)

IF (FSO_USE_SPEECH)
	TARGET_LINK_LIBRARIES(Freespace2 ${SPEECH_LIBRARIES})
	INCLUDE_DIRECTORIES(${SPEECH_INCLUDE_DIRS})
	ADD_DEFINITIONS(-DFS2_SPEECH)
ENDIF(FSO_USE_SPEECH)

INCLUDE_DIRECTORIES(${OPENAL_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${VORBIS_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OGG_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${LUA_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${PNG_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${JPEG_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${CODE_HEADERS})
INCLUDE_DIRECTORIES(${FREESPACE_HEADERS})


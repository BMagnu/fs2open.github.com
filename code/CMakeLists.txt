
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/project.h.in ${GENERATED_SOURCE_DIR}/project.h)

INCLUDE(source_groups.cmake)

ADD_LIBRARY(code ${file_root})

set_target_properties(code PROPERTIES
	COMPILE_DEFINITIONS_RELEASE "NDEBUG"
	COMPILE_DEFINITIONS_DEBUG "_DEBUG"
)

IF(MSVC)
	set_target_properties(code PROPERTIES
		COMPILE_DEFINITIONS_DEBUG "_DEBUG;PDB_DEBUGGING=1;_HAS_ITERATOR_DEBUGGING=0"
	)
ENDIF(MSVC)

IF (FSO_USE_SPEECH)
	INCLUDE_DIRECTORIES(${SPEECH_INCLUDE_DIRS})
	ADD_DEFINITIONS(-DFS2_SPEECH)
ENDIF(FSO_USE_SPEECH)

IF(FSO_USE_VOICEREC)
	ADD_DEFINITIONS(-DFS2_VOICER)
	
	SET(SOUND_DIR "${CMAKE_CURRENT_SOURCE_DIR}/sound")
	SET(GRAMMAR_HEADER "${SOUND_DIR}/grammar.h")

	ADD_CUSTOM_COMMAND(TARGET code
		PRE_BUILD
		COMMAND "${SOUND_DIR}/gc.exe" /h "${GRAMMAR_HEADER}" "${SOUND_DIR}/phrases.xml"
		COMMENT "Compiling voice recognition files"
		)
ENDIF(FSO_USE_VOICEREC)

INCLUDE_DIRECTORIES(${COMPILER_INCLUDES})
INCLUDE_DIRECTORIES(${PLATFORM_INCLUDES})
INCLUDE_DIRECTORIES(${OPENAL_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${VORBIS_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OGG_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${LUA_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${JPEG_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${PNG_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${CODE_HEADERS})
INCLUDE_DIRECTORIES(${FREESPACE_HEADERS})
INCLUDE_DIRECTORIES(${THEORA_HEADERS})
INCLUDE_DIRECTORIES(${GENERATED_SOURCE_DIR})

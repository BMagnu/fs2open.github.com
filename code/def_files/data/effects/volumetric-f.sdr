
in vec4 fragTexCoord;

out vec4 fragOut0;

uniform sampler2D composite;
uniform sampler2D emissive;
uniform sampler2D depth;
uniform sampler3D volume_tex;

layout (std140) uniform genericData {
	mat4 p_inv;
	mat4 v_inv;
	vec3 camera;
};

void main()
{
	vec4 eyeDirection = p_inv * vec4(fragTexCoord.xy * 2.0 - 1.0, -1, 1);
    eyeDirection.w = 0;
    vec3 rayDirection = normalize((v_inv * eyeDirection).xyz);
	vec4 color_in = texture(composite, fragTexCoord.xy);
	color_in.r = max(1.0 - length(-camera - rayDirection * dot(-camera, rayDirection)) / 30.0, 0.0);

	fragOut0 = color_in;
}

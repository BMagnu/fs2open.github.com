name: Check a pull request

on: [pull_request]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    name: Check Linux compilation
    runs-on: ubuntu-16.04
    steps:
      - name: Prepare Environment
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo add-apt-repository ppa:beineri/opt-qt571-xenial
          sudo add-apt-repository ppa:msulikowski/valgrind # For fixing a bug with valgrind 3.11 which does not recognize the rdrand instruction
          sudo apt-get -yq update
          sudo apt-get -yq install cmake ninja-build libopenal-dev libreadline6-dev libpng12-dev libjpeg62-dev liblua5.1-0-dev libjansson-dev libsdl2-dev libfreetype6-dev valgrind qt57base g++-8
      - uses: actions/checkout@v1
        name: Checkout
        with:
          submodules: true
      - name: Configure CMake
        env:
          CONFIGURATION: ${{ matrix.configuration }}
        run: |
          CXXFLAGS="-m64 -mtune=generic -mfpmath=sse -msse -msse2 -pipe -Wno-unknown-pragmas"
          CFLAGS="-m64 -mtune=generic -mfpmath=sse -msse -msse2 -pipe -Wno-unknown-pragmas"

          if [[ "$CC" =~ ^clang.*$ ]]; then
              CXXFLAGS="$CXXFLAGS -stdlib=libc++"
          fi

          mkdir build
          cd build

          export CXXFLAGS
          export CFLAGS
          CMAKE="cmake -G Ninja -DFSO_FATAL_WARNINGS=ON $CMAKE_OPTIONS"
          eval $CMAKE -DCMAKE_BUILD_TYPE=$CONFIGURATION -DFSO_BUILD_TESTS=ON -DFSO_BUILD_INCLUDED_LIBS=ON -DFSO_BUILD_QTFRED=ON ..
      - name: Compile
        working-directory: ./build
        run: ninja -k 20 all
      - name: Run Tests
        working-directory: ./build
        env:
          CONFIGURATION: ${{ matrix.configuration }}
        run: |
          if [ "$CONFIGURATION" = "Debug" ]; then
              valgrind --leak-check=full --error-exitcode=1 --gen-suppressions=all \
                  --suppressions="$GITHUB_WORKSPACE/ci/travis/valgrind.supp" ./bin/unittests --gtest_shuffle
          else
              ./bin/unittests --gtest_shuffle
          fi
